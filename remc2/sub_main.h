#pragma once

//#include "engine/defs.h"

//#include "stdafx.h"

//#include <dir.h>

//#include <vld.h>//only for debug

#include <array>
#include <typeinfo>

#include "utilities/DataFileIO.h"
#include "utilities/BitmapIO.h"

#include "engine/XUnk_D4350.h"
#include "engine/Type_D404C.h"
#include "engine/Type_D94F0_Bldgprmbuffer.h"
#include "engine/Type_D93C0_Bldgprmbuffer.h"
#include "engine/Type_MapScreenPortals_E17CC.h"
#include "engine/Type_SecretMapScreenPortals_E2970.h"
#include "engine/Basic.h"
#include "engine/Sound.h"
#include "engine/Type_Animations.h"
#include "engine/Animation.h"
#include "engine/GameRenderOriginal.h"
#include "engine/GameRenderHD.h"
#include "engine/GameRenderNG.h"
#include "engine/GameRenderGL.h"
#include "engine/GameBitmap.h"
#include "engine/GameBitmapIndexes.h"
#include "engine/GameUiConstants.h"
#include "engine/LangTextIndexes.h"

#include "engine/Terrain.h"

#include "portability/port_net.h"

//#define __CFSHL__(x, y) (x<<y)
//#define __CFSHL__(x, y) 1
/*int32_t __CFSHL__(uint32_t x, uint32_t y) {
	return 1;
}*/
//myprintf("invalid_operation:__CFSHL__(x, y)")
//#define __RCR__(x, y) printf("invalid_operation:__RCR__(x, y)")
//#define __RCL__(x, y) printf("invalid_operation:__RCL__(x, y)")
//#define __ROL4__(x, y) __ROL__(x, y)       // Rotate left
//#define __ROR4__(x, y) __ROR__(x, y)       // Rotate left

#include "engine/sub_main_mouse.h"
//#include "engine/ail_sound.h"

/* This file has been generated by the Hex-Rays decompiler.
Copyright (c) 2007-2017 Hex-Rays <info@hex-rays.com>

Detected compiler: Watcom C++
*/

/*int sub_main(int argc, char **argv, char **envp);
int sub_97F90(x_DWORD *a1);
int sub_980D0(x_DWORD *a1, int a2);
int sub_98170(x_DWORD *a1, int a2, int a3);
int sub_A158B(int a1, __int16 a2, x_WORD *a3, x_WORD *a4);
bool sub_A4CB0();
int sub_A4F10(int a1, char a2, char a3, char a4);
x_DWORD * sub_A5850(int a1, char a2, unsigned int a3, signed int a4, int a5);*/

#ifndef SUB_MAIN_ACTIVE
#define SUB_MAIN_ACTIVE

#define O_RDONLY        0x00    /* read only */
#define O_WRONLY        0x01    /* write only */
#define O_RDWR          0x02    /* read and write */
#define O_BINARY        0x10    /* file contains - binary data */
#define O_TEXT          0x20    /* - text (\n terminated records) */
#define O_CREAT         0x200   /* replace, or create t */
#define O_TRUNC         0x400   /* open with truncation */

#ifdef _MSC_VER

#include <stdlib.h>
#define bswap_16(x) _byteswap_ushort(x)
#define bswap_32(x) _byteswap_ulong(x)
#define bswap_64(x) _byteswap_uint64(x)

#elif defined(__APPLE__)

// Mac OS X / Darwin features
#include <libkern/OSByteOrder.h>
#define bswap_16(x) OSSwapInt16(x)
#define bswap_32(x) OSSwapInt32(x)
#define bswap_64(x) OSSwapInt64(x)

#elif defined(__sun) || defined(sun)

#include <sys/byteorder.h>
#define bswap_16(x) BSWAP_16(x)
#define bswap_32(x) BSWAP_32(x)
#define bswap_64(x) BSWAP_64(x)

#elif defined(__FreeBSD__)

#include <sys/endian.h>
#define bswap_16(x) bswap16(x)
#define bswap_32(x) bswap32(x)
#define bswap_64(x) bswap64(x)

#elif defined(__OpenBSD__)

#include <sys/types.h>
#define bswap_16(x) swap16(x)
#define bswap_32(x) swap32(x)
#define bswap_64(x) swap64(x)

#elif defined(__NetBSD__)

#include <sys/types.h>
#include <machine/bswap.h>
#if defined(__BSWAP_RENAME) && !defined(__bswap_32)
#define bswap_16(x) bswap16(x)
#define bswap_32(x) bswap32(x)
#define bswap_64(x) bswap64(x)
#endif

#else

#define bswap_16(x) ((uint16_t) ((((x) >> 8) & 0xff) | (((x) & 0xff) << 8)))
#define bswap_32(x)					\
  ((((x) & 0xff000000u) >> 24) | (((x) & 0x00ff0000u) >> 8)	\
   | (((x) & 0x0000ff00u) << 8) | (((x) & 0x000000ffu) << 24))
#define bswap_64(x)			\
  ((((x) & 0xff00000000000000ull) >> 56)	\
   | (((x) & 0x00ff000000000000ull) >> 40)	\
   | (((x) & 0x0000ff0000000000ull) >> 24)	\
   | (((x) & 0x000000ff00000000ull) >> 8)	\
   | (((x) & 0x00000000ff000000ull) << 8)	\
   | (((x) & 0x0000000000ff0000ull) << 24)	\
   | (((x) & 0x000000000000ff00ull) << 40)	\
   | (((x) & 0x00000000000000ffull) << 56))

#endif

#ifndef _countof
#define _countof(arr) sizeof(arr) / sizeof(arr[0])
//dirty
#endif

//#if !defined(_M_I86) && !defined(__WINDOWS_386__)

/* dword registers */

struct DWORDREGS {
	unsigned int eax;
	unsigned int ebx;
	unsigned int ecx;
	unsigned int edx;
	unsigned int esi;
	unsigned int edi;
	unsigned int cflag;
};

//#endif
/*
// word registers

struct WORDREGS {
	unsigned short ax;  //__FILLER(_1)
		unsigned short bx;  //__FILLER(_2)
		unsigned short cx;  //__FILLER(_3)
		unsigned short dx;  //__FILLER(_4)
		unsigned short si;  //__FILLER(_5)
		unsigned short di;  //__FILLER(_6)
#if defined(__WINDOWS_386__)
		unsigned short cflag;
#else
		unsigned int cflag;
#endif
};

// byte registers

struct BYTEREGS {
	unsigned char al, ah;  //__FILLER(_1)
		unsigned char bl, bh;  //__FILLER(_2)
		unsigned char cl, ch;  //__FILLER(_3)
		unsigned char dl, dh;  //__FILLER(_4)
};

union REGS {
#if defined(_M_I86) || defined(__WINDOWS_386__)
	struct WORDREGS  x;
#else
	struct DWORDREGS x;
#endif
	struct WORDREGS  w;
	struct BYTEREGS  h;
};
*/
//#define REGS x_DWORD[6]

/*extern x_WORD __CS__;
extern x_WORD __GS__;
extern x_WORD __DS__;
extern x_WORD __ES__;
extern x_WORD __FS__;
extern x_WORD __SS__;*/

//extern char IsTable[];

#pragma pack (1)
typedef struct {//lenght 14
	uint32_t dword_0;//ok
	int16_t word_4;//ok
	uint32_t address_6;
	int32_t dword_10;//ok
}
type_D4C52ar2;
#pragma pack (16)

#pragma pack (1)
typedef struct {//lenght 18
	uint32_t dword_0;
	uint32_t dword_4;
	int16_t word_8;
	type_D4C52ar2* dword_10;
	type_D4C52ar2* dword_14;
}
type_D4C52ar;
#pragma pack (16)

#pragma pack (1)
typedef struct {
	unsigned long LastTimeRendered_0;
	int16_t PosX_4;
	int16_t PosY_6;
	int16_t ActSprite_8;
	int8_t FirstSprite_10;
	int8_t LastSprite_11;
} type_MainMenuAnimations_E1748;

typedef struct {//lenght 30
	int32_t dword_0;
	int32_t dword_4;
	int16_t word_8;
	int16_t word_10;
	int16_t word_12;
	int16_t word_14;
	int16_t word_16;
	int16_t word_18;
	int8_t byte_20;
	int8_t byte_21;
	int16_t word_22;
	int16_t word_24;
	int16_t word_26;
	//int8_t stuba[1];
	int16_t word_28;
	//int8_t stubb[1];
} type_x_BYTE_E25ED_db_str;
#pragma pack (16)

extern filearray_struct x_DWORD_E9B20[4];

extern __int16 x_WORD_E29DA_type_resolution; // weak

#pragma pack (1)
typedef struct {//lenght 18
	int16_t word_0;
	int16_t word_2;
	int16_t word_4;
	int16_t word_6;
	int16_t word_8;
	int16_t word_10;
	int16_t word_12;
	int16_t word_14;
	int8_t byte_16;
	int8_t byte_17;
}
type_E24BCx;
#pragma pack (16)


#pragma pack (1)
typedef struct {//lenght 18
	int16_t word_0;
	int16_t word_2;
	int16_t word_4;
	int16_t word_6;
	int16_t word_8;
	int16_t word_10;
	int16_t word_12;
	int16_t word_14;
	int16_t word_16;
}
type_x_BYTE_E25ED_2BB;
#pragma pack (16)

#pragma pack (1)
typedef struct {
	int32_t x_DWORD_18058C;
	int32_t x_DWORD_180590; // [4]//unk_18058Cstr.x_DWORD_180590//1
	int32_t x_DWORD_180594; // [8]//unk_18058Cstr.x_DWORD_180594//2
	int32_t x_DWORD_180598; // [12]//unk_18058Cstr.x_DWORD_180598//3
	int32_t x_DWORD_18059C; // [16]//unk_18058Cstr.x_DWORD_18059C//4
	int32_t x_DWORD_1805A0; // weak//unk_18058Car[20]//5
	int32_t x_DWORD_1805A4; // weak//unk_18058Car[0x18]//6
	int32_t x_DWORD_1805A8; // weak//unk_18058Car[28]//7
	int32_t x_DWORD_1805AC; // weak//unk_18058Car[0x20]//8
	axis_2d_32 x_DWORD_1805B0_mouse;
	//int32_t x_DWORD_1805B0_mouse.x; // weak//unk_18058Car[36]
	//int32_t x_DWORD_1805B0_mouse.y; // weak//unk_18058Car[40]
	int32_t x_DWORD_1805B8_mouse_position_x; // weak//unk_18058Car[44]
	int32_t x_DWORD_1805BC_mouse_position_y; // weak//unk_18058Car[48]
	int16_t x_WORD_1805C0_arrow_keys; // weak//unk_18058Car[52] // keyboard buttons
	int16_t x_WORD_1805C2_joystick; // weak//unk_18058Car[54]
	int16_t x_WORD_1805C4_vio1_analog_joy; // weak//unk_18058Car[56]
	int16_t x_WORD_1805C6_vio2_analog_joy; // weak//unk_18058Car[58]
	int16_t x_WORD_1805C8; // weak//unk_18058Car[60]
	uint8_t unk_1805CE[84]; // weak//unk_18058Car[66]
	int16_t stub_180622;
} type_unk_18058Cstr;//end 180624
#pragma pack (16)

//extern type_x_DWORD_17DE38str x_DWORD_17DE38str;
/*
extern int16_t x_DWORD_17DEE4_mouse_positionx; // weak
extern int16_t x_DWORD_17DEE4_mouse_positiony; // weak
extern __int16 x_WORD_17DEEC; // weak
extern __int16 x_WORD_17DEEE; // weak
extern __int16 x_WORD_17DEF0; // weak
extern __int16 x_WORD_17DEF2; // weak
extern __int16 x_WORD_17DEF4; // weak
extern __int16 x_WORD_17DEF6; // weak
extern __int16 x_WORD_17DEF8; // weak
extern __int16 x_WORD_17DEFA; // weak
extern __int16 x_WORD_17DEFC; // weak
extern __int16 x_WORD_17DEFE; // weak
extern __int16 x_WORD_17DF00; // weak
extern __int16 x_WORD_17DF02; // weak
extern __int16 x_WORD_17DF04; // weak
extern __int16 x_WORD_17DF06; // weak
extern __int16 x_WORD_17DF08; // weak
extern __int16 x_WORD_17DF0A; // weak
extern __int16 x_WORD_17DF0C; // weak
extern __int16 x_WORD_17DF0E; // weak
extern char x_BYTE_17DF10_get_key_scancode; // weak
extern char x_BYTE_17DF11_last_key_status; // weak
*/

extern uint16_t x_WORD_17B4E0; // 34c4e0

// needed from GameUI
extern void(*ptrDrawBitmap_F01E8)(int16_t, int16_t, bitmap_pos_struct_t, uint8_t scale);

extern char isCaveLevel_D41B6;

#pragma pack (1)
typedef struct {//lenght 16
	int16_t x1_26_0;//0 x
	int16_t y1_28_1;//1 y
	int16_t word_30_2;//2
	int16_t word_32_3;//3
	int16_t word_34_4;//4
	int16_t word_36_5;//5
	int16_t word_38_6;//6
	int16_t click_40_7;//7
	int16_t nocl_42_8;//8
} type_str_word_26;

typedef struct {//lenght 44
	uint32_t dword_0;
	//int16_t word_2;
	int32_t dword_4;//4 dword
	//int16_t word_6;//remove it
	int16_t selected_8;
	int16_t xmin_10;
	int16_t ymin_12;
	int16_t sizex_14;
	int16_t sizey_16;
	int16_t word_18;
	uint8_t byte_20;//index of gold sprite
	uint8_t byte_21;//index of gray sprite
	int8_t byte_22;
	int8_t canSelect_23;
	int8_t gold_color_24;
	int8_t byte_25;
	//int16_t word_24;//23 and 24 byte
	type_str_word_26 str_26;//0
	//int16_t word_28;//1
	//int16_t word_30;//2
	//int16_t word_32;//3
	//int16_t word_34;//4
	//int16_t word_36;//5
	//int16_t word_38;//6
	//int16_t click_40;//7
	//int16_t nocl_42;
}
type_WORD_E1F84;
#pragma pack (16)

// typedef struct NCB{
//				BYTE     ncb_command;	/* NetBIOS command (see netbios.h) */
//BYTE     ncb_retcode;	/* NetBIOS return code; 0xFF until asynchronous call  finishes */
//BYTE     ncb_lsn;	/* local session number */
//BYTE     ncb_num; 	/* NetBIOS name number */
//DWORD    ncb_buffer;	/* transmit/receive buffer */
//WORD     ncb_length;	/* buffer length */
//BYTE     ncb_callName[16];  	/* name of remote node to send datagram or to be connected; */
//		/* when listening for connections: name trying to connect  */
//BYTE     ncb_name[16];	/* local name */
//BYTE     ncb_rto;	/* receive timeout in 500 ms units;  0=forever */
//BYTE     ncb_sto;	/* send timeout in 500 ms units;  0=default */
//DWORD    ncb_post;	/* ptr to post-processing routine */
//	/* (DOS: ES:BX points to NCB when entered. Ends with RETF) */
//BYTE     ncb_lana_num;	/* LAN adapter number; 0-based */
//BYTE     ncb_cmd_cplt;	/* completion status */
//BYTE     ncb_reserved[14];
//		 } NCB;

extern char x_BYTE_D4B80;

void j___delay(x_DWORD); // weak

void WriteBufferToBMP(uint16_t width, uint16_t height, uint8_t* ptrPalette, uint8_t* ptrBuffer, const std::string &filename = "BufferOut.bmp");
void WriteMenuGraphicToBMP(uint16_t width, uint16_t height, uint8_t scale, uint8_t* ptrPalette, uint8_t* ptrBuffer);

void sub_43C60(unsigned __int8 a1, char a2, int a3, int a4);


void sub_49F30();


void sub_6EBF0(filearray_struct* a1);

char sub_533B0_decompress_levels(__int16 a1, Type_Level_2FECE* a2, std::string customLevelPath = "");

//int /*__noreturn*/ sub_10000(); // weak
type_event_0x6E8E* sub_15CB0(/*type_str_0x6E8E* a1,*/ type_event_0x6E8E* a2); // weak
char sub_15D40(__int16 a1, type_event_0x6E8E* a2, type_event_0x6E8E* a3); // weak
int16_t sub_16730(/*int a1,*/ type_event_0x6E8E* a2, char a3); // weak
int16_t sub_16CA0(baxis_2d* a2, __int16 a3, char a4); // weak
void sub_17A00(int8_t* a1, signed int a2, __int16 a3); // weak
int _wcpp_1_unwind_leave__120(int32_t a, int32_t b, int32_t c);// weak
void AdjustVolume_1A070(signed int a1, __int16 a2);
void JUMPOUT(int* adr);
void JUMPOUT(int32_t cs, int* adr);
void JUMPOUT(int32_t cs, int a, int* adr);
void sub_1F0C0(/*type_str_0x6E8E* a1,*/ type_event_0x6E8E* a2);
void sub_253B0(/*int result, */type_event_0x6E8E* a2, unsigned __int8 a3, unsigned __int8 a4);
signed int sub_369F0(/*signed int a1,*/ __int16 a2);
//void qmemcpy(void* a, void* b, size_t c);
void sub_2A340(/*int a1, type_str_0x6E8E* a2, type_str_0x6E8E* a3, int a4, *//*type_str_0x6E8E* a5, */type_event_0x6E8E* a6);
void sub_2AA90(/*type_str_0x6E8E* a1, */type_event_0x6E8E* a2, type_event_0x6E8E* a3);
void ClearGraphicsBuffer_72883(void* ptrBuffer, uint16_t width, uint16_t height, char value);
int _wcpp_1_unwind_leave__62(void); //weak
//int sub_7FCB0_draw_text_with_border(/*int a1,*/ char* a2, int32_t a3, int32_t a4, int a5, uint8_t a6, unsigned __int8 a7, uint32_t a8);//560cb0
signed int sub_36A50(/*signed int a1, */char a2);
void sub_36920(/*signed __int16 a1, */type_event_0x6E8E* a2);
void sub_48A20(int a1, char a2, char a3, int a4, int a5, unsigned __int8 a6);
//void __outx_WORD(unsigned short Port, unsigned short Data);
//void __outx_BYTE(unsigned short Port, unsigned char Data);
//unsigned char __inx_BYTE(unsigned short Port);
void sub_44EE0_smooth_tiles(/*int a1, */uaxis_2d a2);
void sub_54600_mouse_reset();
void sub_56A30_init_game_level(unsigned int a1, int16_t level = -1, std::string customLevelPath = "");
void sub_5B870_copy_sentence(char* langbuffer, char** langindexbuffer, uint32_t count);
void sub_47320_in_game_loop(signed int a1);
void sub_56D60(unsigned int a1, char a2);
void SetCenterScreenForFlyAssistant_6EDB0();
int NetworkInitConnection_7308F(char* a2, __int16 a3);
void NetworkUpdateConnections2_74374();
int16_t GetIndexNetwork2_74515();
void sub_7A060_get_mouse_and_keyboard_events();
void sub_7AA70_load_and_decompres_dat_file(const char* a1, uint8_t* a2, int a3, int a4);
void GameEvents_51BB0();
//x_DWORD /*__cdecl*/ toupper(x_DWORD); //weak
void sub_55C60(type_str_0x2BDE* loc0x2BDE);
int32_t /*__cdecl*/ fix_filelength(int32_t);// weak
//x_DWORD /*__cdecl*/ access(char* path, uint32_t flags);// weak
//x_DWORD /*__cdecl*/ mkdir(char* path);
int32_t /*__cdecl*/ settextposition(int32_t, int32_t);// weak
void outtext(const char* text);// weak
int /*__fastcall*/ gettextposition(int32_t, int32_t, int32_t);// weak
int32_t /*__cdecl*/ signal(int32_t, int32_t);// weak
//int __cdecl unknown_libname_1(char *a1);
//void _disable();
//void _enable();
//long _InterlockedExchange(long volatile * Target, long Value);
//x_DWORD /*__cdecl*/ dos_getvect(x_DWORD);// weak
//void(*dos_getvect(x_DWORD number))();
//x_DWORD /*__cdecl*/ dos_setvect(x_DWORD number, void(*actcall)(), x_DWORD);// weak
//unsigned char _BitScanReverse(unsigned long * Index, unsigned long Mask);
//void sub_8F920(uint8_t a1byte1, uint8_t a1byte2, int16_t posx, int16_t posy, uint8_t* a4, unsigned __int8 a5, char a6);
//void sub_8F935_bitmap_draw_final(uint8_t a1byte1, uint8_t a1byte2, uint16_t a2, int a3, uint8_t* a4, uint8_t setbyte, char a6);
uint8_t NetworkAddName_74767(/*signed __int16* a1,*/ myNCB* a2x, char* a3);
//x_DWORD /*__cdecl*/ segread(SREGS*); //weak
//x_DWORD /*__cdecl*/ int386x(x_DWORD, x_DWORD, x_DWORD, x_DWORD);// weak
//int int386x(int, REGS *, REGS *, struct SREGS *);
//unsigned char __readgsx_BYTE(unsigned long Offset);
//unsigned short __readgsx_WORD(unsigned long Offset);
void sub_753D0();
void sub_7A110_load_hscreen(char a1, char a2);
void ResetMouse_7B5A0();
void sub_7B5D0();
void ClearScrollDialogVars_7C020(type_str_word_26* a1x);
char sub_7C200(uint8_t a1);
void sub_7E840_draw_textbox_with_line(type_E24BCx* a1x, __int16 a2, __int16 a3);
void sub_7E8D0(x_WORD* a1, __int16 a2, __int16 a3, __int16 a4, __int16 a5, __int16 a6, __int16 a7);
bool sub_7E9D0(x_WORD* a1, x_WORD* a2, x_WORD* a3);
void sub_81CA0(int a1, int a2, __int16 a3, __int16 a4, type_x_BYTE_E25ED_db_str* a5);
signed int sub_7E5A0_pre_draw(int a1, int a2, __int16 a3, __int16 a4, uint8_t* a5, __int16 a6, __int16 a7);
void sub_81260(int a1, int a2, int8_t* a3, __int16 a4, __int16 a5);
int sub_812D0_drawDotBitmap(__int16 a1, __int16 a2);
signed __int16 sub_81EE0(int a1, int a2, int a3, signed __int16 a4, __int16 a5, __int16 a6);
void sub_85CC3_draw_round_frame(/*unsigned int a1, int a2, */unsigned __int16* a3);
void fix_sub_9A0FC_wait_to_screen_beam(int32_t delay = 10);
//void sub_840B8(char a1, bool a2, char a3, char a4);
//unsigned     int __readeflags(void);

__int16 sub_840D3(char _CF, bool _ZF, char _SF, char _OF);//ShowPerifery
void  sub_841CE(__int16 a1);//ShowPerifery
//sub_8EA7B ShowPerifery
//sub_A0F06 ShowPerifery
//sub_A12C5 ShowPerifery
//sub_AC70E ShowPerifery
//sub_AC7F6 ShowPerifery
//sub_AC843 ShowPerifery
//sub_AC8DD ShowPerifery
//sub_AC918 ShowPerifery
//sub_B5022 ShowPerifery
//sub_B5128 ShowPerifery
//sub_B51B3 ShowPerifery
//sub_B522B ShowPerifery
//sub_6FDA0 ShowPerifery
//sub_90530 ShowPerifery
//sub_B5015 ShowPerifery
//sub_840B8 ShowPerifery

char sub_86860_speak_Sound(unsigned __int16 a1);
void sub_86EB0(unsigned __int8 a1, unsigned __int8 a2, char a3);
int16_t sub_89B60_aplicate_setting(uint8_t a1);
//void __writeeflags(unsigned Value);
int32_t /*__cdecl*/ gets(int32_t);// weak
//x_DWORD /*__cdecl*/ fix_tell(x_DWORD);// weak
int32_t /*__cdecl*/ expand(int32_t, int32_t);// weak
//int /*__fastcall*/ _wcpp_1_unwind_leave__132(x_DWORD);// weak
void sub_8BA10(int a2, int* a3, char* a4, int a5);
double /*__fastcall*/ _CHP(int32_t);// weak
char sub_8B980(int a1, int a2, char* a3, int a4);
signed int sub_8BBE0(uint8_t* a1);
signed int sub_8CEDF_install_mouse();

int16_t sub_90B27_VGA_pal_fadein_fadeout(TColor* a1x, uint8_t shadow_levels, bool a3, int32_t frameDelay = 10);
void sub_90D6E_VGA_set_video_mode_320x200_and_Palette(TColor* Palette);
void sub_90E07_VGA_set_video_mode_640x480_and_Palette(TColor* Palette);
void CopyScreen(void* source, void* desc, unsigned __int16 width, unsigned __int16 height);
signed int sub_9A10A_check_keyboard();
bool sub_9AE04(int a1, int a2);

/*
HDIGDRIVER sub_93330_AIL_install_DIG_driver_file(char* filename, IO_PARMS* IO);
char sub_9AE90(int eax0, int edx0, int ebx0, int* a1, int8_t* a2, int a3, int a4);
int sub_931F0_AIL_install_DIG_INI(HDIGDRIVER* a2, char* digPath);
HMDIDRIVER sub_95850_AIL_install_MDI_driver_file(char* filename, IO_PARMS* IO);
int32_t sub_95710_AIL_install_MDI_INI(HMDIDRIVER* mdi, char* fileName);
*/
uint32_t /*__cdecl*/ x_read(FILE* descriptor, uint8_t* data, uint32_t size);// weak
double IF_DPOW(double, double);// weak
int32_t x_dos_setdrive(int32_t a, int32_t* b);
//int /*__cdecl*/ x_chdir(const char* path);
//char* /*__cdecl*/ x_getcwd(x_DWORD a, x_DWORD b);// weak
//int32_t /*__cdecl*/ x_outp(int32_t, char);// weak
//int32_t /*__cdecl*/ x_inp(int32_t);// weak
//x_DWORD *sub_9E720(int a1, int a2, int a3);
/*
int sub_A3720_AIL_API_install_DIG_INI(HDIGDRIVER* dig, char* digPath);
HDIGDRIVER sub_A3600_AIL_API_install_DIG_driver_file(char* filename, IO_PARMS* IO);
int32_t sub_A78F0_AIL_API_install_MDI_INI(HMDIDRIVER* mdi, char* fileName);
HMDIDRIVER sub_A77D0_AIL_API_install_MDI_INI(char* filename, IO_PARMS* IO);
*/
int32_t /*__cdecl*/ x_setmode(FILE* path, int mode);// weak
//uint32_t sub_98AE0(uint8_t *a1);
//__int16 sub_98B2C(unsigned __int8 a1, int a2);
//char sub_98BAF(int a1);
__int16 sub_98AE9(__int16* a1, int a2);
unsigned __CFRCR__(__int16 a, unsigned __int8 b);
uint32_t /*__cdecl*/ x_write(FILE* descriptor, uint8_t* buffer, uint32_t size_t);
//int32_t /*__cdecl*/ x_tolower(int32_t);// weak
//FILE* x_open(char* path, int pmodex);
//void __writegsx_WORD(unsigned long Offset, unsigned short Data);
//void __writegsx_DWORD(unsigned long Offset, unsigned long Data);
//x_DWORD /*__cdecl*/ dos_read(x_DWORD, char, x_DWORD, x_DWORD, x_DWORD);// weak
void __inx_BYTEstring(unsigned short Port, unsigned char* Buffer, unsigned long Count);
//unsigned int __getcallerseflags(void);
//void __sidt(void *Destination);
//unsigned long __readcr0(void);
//void __writecr0(unsigned __int32 Data);
int sub_ACE8D(int16_t* a1, int a2, int* a3);
void sub_AD0E2(int8_t* a1, int a2, int* a3, int8_t** a4);
void sub_ACF1A(int8_t* a1, int a2, int* a3);
void sub_B5F8F(__int16 a1, uint16_t* a2, int32_t a3, __int16* a4);
int sub_BD320(int result, int8_t* a2, int8_t* a3, int a4, int a5, uint8_t* a6);
void sub_B5EFA(__int16 a1, uint16_t* a2, int32_t a3, __int16* a4);
Type_SecretMapScreenPortals_E2970* sub_824B0(__int16 a1);

void sub_101C0();
void sub_5BCC0_set_any_variables1();
signed int sub_5C1B0_set_any_variables2();
signed int sub_5BF50_load_psxdata();

void CleanF5538_716A0();

//type_str_0x6E8E* pre_sub_4A190(uint32_t adress, int16_t* a1,int type);


//---------------------------

//char sub_54200();

void sub_71410_process_tmaps();
void initposistruct();

void Initialize();
int /*__cdecl*/ sub_main(int argc, char **argv, char **envp);


// FIXME: these functions and vars are used in Events.cpp and should be moved somewhere else
extern axis_3d x_WORD_EB398ar;
extern type_D4C52ar2 str_x_DWORD_D4C52ar_0x2F22[7];
extern std::array<type_D4C52ar, 17> str_D4C48ar;
extern type_event_0x6E8E* (*arsub_2a881e[])(axis_3d*);

void sub_49A30(type_event_0x6E8E* event, unsigned __int16 a2);
signed int sub_6E020(unsigned __int16 a1);
void SetEntity04_57F10(type_event_0x6E8E* entity);
void test_pre_sub_4a190(uint32_t adress);
signed int sub_12910(type_event_0x6E8E* a1);
signed int sub_12A70(type_event_0x6E8E* a1);
signed int sub_12E70(type_event_0x6E8E* a1);
signed int sub_12FF0(type_event_0x6E8E* a1);
signed int sub_13100(type_event_0x6E8E* a1);
signed int sub_131F0(type_event_0x6E8E* a1);
signed int sub_13270(type_event_0x6E8E* a1);
signed int sub_133B0(type_event_0x6E8E* a1);
signed int sub_135C0(type_event_0x6E8E* a1);
signed int sub_13710(type_event_0x6E8E* a1);
signed int sub_13830(type_event_0x6E8E* a1);
signed int sub_13850(type_event_0x6E8E* a1);
int sub_13870(type_event_0x6E8E* a1);
signed int sub_13890(type_event_0x6E8E* a1);
signed int sub_13B00(type_event_0x6E8E* a1);
signed int sub_13C50(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_13CE0(type_event_0x6E8E* a1);
signed int sub_13DC0(type_event_0x6E8E* a1);
signed int sub_13E40(type_event_0x6E8E* a1);
signed int sub_14030(type_event_0x6E8E* a1);
signed int sub_14250(type_event_0x6E8E* a1);
signed int sub_14530(type_event_0x6E8E* a1);
signed int sub_14630(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_146C0(type_event_0x6E8E* a1, unsigned __int8 a2);
void sub_146F0(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_148E0(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_14B10(type_event_0x6E8E* a1, unsigned __int8 a2);
type_event_0x6E8E* sub_14BD0(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
__int16 sub_14C40(type_event_0x6E8E* a1);
bool sub_14C60(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
signed int sub_14C90(type_event_0x6E8E* a1, type_event_0x6E8E* a2, signed int a3, signed int a4);
signed int sub_14E10(type_event_0x6E8E* a1, unsigned __int8 a2);
type_event_0x6E8E* sub_15170(type_event_0x6E8E* a1, unsigned __int8 a2);
signed int sub_155E0(type_event_0x6E8E* a1);
bool sub_156F0(type_event_0x6E8E* a1, unsigned __int8 a2);
bool sub_15730(type_event_0x6E8E* a1, unsigned __int8 a2);
type_event_0x6E8E* sub_15760(type_event_0x6E8E* a1, unsigned __int8 a2);
char sub_15790(type_event_0x6E8E* a1);
char sub_15910(type_event_0x6E8E* a1);
void sub_159E0();
void sub_15D20(type_event_0x6E8E* a1);
bool sub_15E60(type_event_0x6E8E* a1);
char sub_15EE0();
signed int sub_15F20(type_event_0x6E8E* a1, signed __int16 a2, signed int a3);
signed int sub_15FC0(type_event_0x6E8E* a1);
signed int sub_161A0(type_event_0x6E8E* a1);
bool sub_164B0(type_event_0x6E8E* a1);
signed int sub_16580(type_event_0x6E8E* a1);
char sub_169C0(type_event_0x6E8E* a1);
int sub_16E70(baxis_2d* a1, baxis_2d* a2);
type_event_0x6E8E* sub_16FC0(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
int sub_1B5F0();
void sub_1B6B0(type_event_0x6E8E* a1);
signed int sub_1B8C0(type_event_0x6E8E* a1);
void sub_1BD90(type_event_0x6E8E* a1, char a2);
void sub_1BF90(type_event_0x6E8E* a1, char a2);
signed int sub_1C310(type_event_0x6E8E* a1, char a2, unsigned __int16(*a3)(type_event_0x6E8E*, type_event_0x6E8E*));
void sub_1C560(type_event_0x6E8E* a1, unsigned __int16 a2);
void sub_1C890(type_event_0x6E8E* a1, char a2);
void sub_1C930(type_event_0x6E8E* a1);
void sub_1C980(type_event_0x6E8E* a1, char a2);
signed int sub_1CC20(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
signed int sub_1CCE0(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
signed int sub_1CDA0(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
signed int sub_1CE80(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
signed int sub_1CED0(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
signed int sub_1CF20(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
signed int sub_1D0E0(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
signed int sub_1D1A0(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
signed int sub_1D260(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
void sub_1D460(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
void sub_1D5D0(type_event_0x6E8E* a1, __int16 a2);
void sub_1D700(type_event_0x6E8E* a1, __int16 a2);
void sub_1D7C0(type_event_0x6E8E* a1, __int16 a2);
void sub_1D880(type_event_0x6E8E* a1, __int16 a2);
void sub_1D8A0(type_event_0x6E8E* a1, __int16 a2);
void sub_1D8C0(type_event_0x6E8E* a1, __int16 a2);
void sub_1DBF0(type_event_0x6E8E* a1, unsigned __int16 a2);
void sub_1DDA0(type_event_0x6E8E* a1, __int16 a2);
void sub_1E000(type_event_0x6E8E* a1, __int16 a2);
void sub_1E020(type_event_0x6E8E* a1, __int16 a2);
void sub_1E040(type_event_0x6E8E* a1, char a2);
void sub_1E1C0(type_event_0x6E8E* a1, __int16 a2);
void sub_1E320(type_event_0x6E8E* a1);
int sub_1E3E0(type_event_0x6E8E* a1);
void sub_1E4D0(type_event_0x6E8E* a1);
void sub_1E580(type_event_0x6E8E* a1, __int16 a2);
void sub_1E700(type_event_0x6E8E* a1, char a2);
void sub_1E9C0(type_event_0x6E8E* a1, __int16 a2);
type_event_0x6E8E* sub_1ED30(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
void sub_1EEE0(type_event_0x6E8E* a1);
void sub_1EF20(type_event_0x6E8E* a1);
void sub_1F000(type_event_0x6E8E* a1);
void sub_1F020(type_event_0x6E8E* a1);
void sub_1F040(type_event_0x6E8E* a1);
void sub_1F340(type_event_0x6E8E* a1);
void sub_1F3C0(type_event_0x6E8E* a1);
void sub_1F440(type_event_0x6E8E* a1);
void sub_1F470(type_event_0x6E8E* a1);
void KillGoat_1F4F0(type_event_0x6E8E* a1);
void TransformGoatToMana_1F510(type_event_0x6E8E* a1);
void HitGoat_1F530(type_event_0x6E8E* a1);
void AddGoat05_01_1F5B0(type_event_0x6E8E* a1);
void sub_1F630(type_event_0x6E8E* a1);
void sub_1F660(type_event_0x6E8E* a1);
void sub_1F6D0(type_event_0x6E8E* a1);
void sub_1F800(type_event_0x6E8E* a1);
void sub_1F830(type_event_0x6E8E* a1);
void sub_1F850(type_event_0x6E8E* a1);
void sub_1F8A0(type_event_0x6E8E* a1);
void sub_1F950(type_event_0x6E8E* a1);
void sub_1F970(type_event_0x6E8E* a1);
void sub_1F990(type_event_0x6E8E* a1);
void sub_1F9E0(type_event_0x6E8E* a1);
void sub_1FA00(type_event_0x6E8E* a1);
void sub_1FA20(type_event_0x6E8E* a1);
void sub_1FA50(type_event_0x6E8E* a1);
void sub_1FA70(type_event_0x6E8E* a1);
void sub_1FAA0(type_event_0x6E8E* a1);
void AddArcher0504_1FF40(type_event_0x6E8E* a1);
void sub_1FFE0(type_event_0x6E8E* a1);
void HitArcher_20010(type_event_0x6E8E* a1);
void KillArcher_20040(type_event_0x6E8E* a1);
void sub_20060(type_event_0x6E8E* a1);
void sub_200F0(type_event_0x6E8E* a1);
void AddScroll05_04_20140(type_event_0x6E8E* a1);
void sub_20370(type_event_0x6E8E* a1);
void sub_203D0(type_event_0x6E8E* a1);
void sub_20940(type_event_0x6E8E* a1);
void sub_20C50(type_event_0x6E8E* a1);
void sub_20E50(type_event_0x6E8E* a1);
void sub_20E80(type_event_0x6E8E* a1);
void sub_20EA0(type_event_0x6E8E* a1);
void sub_20EC0(type_event_0x6E8E* a1);
void sub_20F20(type_event_0x6E8E* a1);
void sub_20F60(type_event_0x6E8E* a1);
void sub_20F80(type_event_0x6E8E* a1);
void sub_20FC0(type_event_0x6E8E* a1);
void sub_21030(type_event_0x6E8E* a1);
char sub_21490(type_event_0x6E8E* a1);
void sub_21850(type_event_0x6E8E* a1);
void sub_21AB0(type_event_0x6E8E* a1);
char sub_21F60(type_event_0x6E8E* a1);
char sub_22190(type_event_0x6E8E* a1);
void sub_221F0(type_event_0x6E8E* a1, __int16 a2);
void sub_22270(type_event_0x6E8E* a1);
void sub_222B0(type_event_0x6E8E* a1);
void sub_223E0();
void sub_22490(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_22530(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_22540(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_22550(type_event_0x6E8E* a1);
void sub_22560(type_event_0x6E8E* a1);
void sub_22580(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_225A0(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_225B0(type_event_0x6E8E* a1);
bool sub_22640(axis_3d* a1, unsigned __int16 a2, unsigned __int16 a3, unsigned __int16 a4);
void sub_226D0(unsigned __int16 a1, int16_t* exwidth, int16_t* expheight);
void sub_22760(type_event_0x6E8E* a1);
void sub_22C80(type_event_0x6E8E* a1);
void sub_22E60(type_event_0x6E8E* a1);
void sub_23020(type_event_0x6E8E* a1);
void sub_231E0(type_event_0x6E8E* a1);
void sub_23200(type_event_0x6E8E* a1);
void sub_23260(type_event_0x6E8E* a1);
void sub_232A0(type_event_0x6E8E* a1);
char sub_232C0();
void sub_23320(type_event_0x6E8E* a1);
void sub_23340(type_event_0x6E8E* a1);
void sub_23640(type_event_0x6E8E* a1);
void sub_23660(type_event_0x6E8E* a1);
void KillTownie_23680(type_event_0x6E8E* a1);
void sub_236F0(type_event_0x6E8E* a1);
void HitTownie_23710(type_event_0x6E8E* a1);
void AddTownie05_0D_23750(type_event_0x6E8E* a1);
void sub_23790(type_event_0x6E8E* a1);
void sub_237B0(type_event_0x6E8E* a1);
void sub_23AC0(type_event_0x6E8E* a1);
void sub_23AE0(type_event_0x6E8E* a1);
void sub_23B00(type_event_0x6E8E* a1);
void sub_23B30(type_event_0x6E8E* a1);
void sub_23B90(type_event_0x6E8E* a1);
void sub_23BD0(type_event_0x6E8E* a1);
void sub_23C20(type_event_0x6E8E* a1);
void sub_23C40(type_event_0x6E8E* a1);
void sub_23E60(type_event_0x6E8E* a1);
void sub_240A0(type_event_0x6E8E* a1);
void sub_240C0(type_event_0x6E8E* a1);
void sub_240E0(type_event_0x6E8E* a1);
void sub_24100(type_event_0x6E8E* a1);
void sub_24150(type_event_0x6E8E* a1);
void sub_24190(type_event_0x6E8E* a1);
void sub_24400(type_event_0x6E8E* a1);
void sub_24420(type_event_0x6E8E* a1);
void sub_24440(type_event_0x6E8E* a1);
void sub_24510(type_event_0x6E8E* a1);
void sub_247D0(type_event_0x6E8E* a1);
void sub_247F0(type_event_0x6E8E* a1);
void sub_24810(type_event_0x6E8E* a1);
void sub_24840(type_event_0x6E8E* a1);
void sub_24860(type_event_0x6E8E* a1);
void sub_248C0(type_event_0x6E8E* a1);
void sub_24930(type_event_0x6E8E* a1);
void sub_24D40(type_event_0x6E8E* a1);
void sub_24DA0(type_event_0x6E8E* a1);
void sub_24DC0(type_event_0x6E8E* a1);
void sub_24DF0(type_event_0x6E8E* a1);
void sub_24E20(type_event_0x6E8E* a1);
void sub_25050(type_event_0x6E8E* a1);
void sub_250B0(type_event_0x6E8E* a1);
void sub_252A0(type_event_0x6E8E* a1);
void sub_252C0(type_event_0x6E8E* a1);
unsigned int sub_252E0(type_event_0x6E8E* a1);
void sub_254E0(type_event_0x6E8E* a1, type_event_0x6E8E* a2, unsigned __int8 a3);
void sub_25550(type_event_0x6E8E* a1x);
void sub_25590(type_event_0x6E8E* a1x);
void sub_255C0(type_event_0x6E8E* a1x);
void HitFirebug_25610(type_event_0x6E8E* a1x);
void sub_25CD0(type_event_0x6E8E* a1);
void sub_25D00(type_event_0x6E8E* a1);
void sub_25D20(type_event_0x6E8E* a1);
void AddFirebug05_13_25D50(type_event_0x6E8E* a1);
void sub_25D80(type_event_0x6E8E* a1);
void sub_25DE0(type_event_0x6E8E* a1);
void sub_25E40(type_event_0x6E8E* a1);
void sub_25F70(type_event_0x6E8E* a1);
void sub_25FD0(type_event_0x6E8E* a1);
void sub_25FF0(type_event_0x6E8E* a1);
void sub_26020(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_26050(type_event_0x6E8E* a1);
char sub_26070(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_263C0(type_event_0x6E8E* a1);
void sub_263E0(type_event_0x6E8E* a1);
void sub_26400(type_event_0x6E8E* a1);
void sub_26470(type_event_0x6E8E* a1);
void sub_265A0(type_event_0x6E8E* a1);
signed int sub_26830(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_268F0(type_event_0x6E8E* a1, unsigned __int8 a2);
char sub_26930(type_event_0x6E8E* a1);
void sub_26960(type_event_0x6E8E* a1);
void sub_26990(type_event_0x6E8E* a1);
void sub_26AA0(type_event_0x6E8E* a1);
void sub_26BD0(type_event_0x6E8E* a1);
void sub_26CA0(type_event_0x6E8E* a1);
void sub_26CC0(type_event_0x6E8E* a1);
void sub_26D20(type_event_0x6E8E* a1);
void sub_26F10(type_event_0x6E8E* a1);
void sub_26FF0(type_event_0x6E8E* a1);
void sub_27120(type_event_0x6E8E* a1);
void sub_271D0(type_event_0x6E8E* a1);
void sub_272C0(type_event_0x6E8E* a1);
void sub_1EF40(type_event_0x6E8E* a2x);
void sub_1EF70(type_event_0x6E8E* a2x);
void sub_1EFD0(type_event_0x6E8E* a2x);
void sub_1F300(type_event_0x6E8E* a2x);
void sub_25280(type_event_0x6E8E* a2x);
void sub_26220(type_event_0x6E8E* a2x);
void sub_26500(type_event_0x6E8E* a2x);
type_event_0x6E8E* sub_27470(type_event_0x6E8E* a1, __int16 a2);
void sub_274C0(type_event_0x6E8E* a1, type_event_0x6E8E* a2, type_event_0x6E8E* a3, __int16 a4);
void sub_276E0(type_event_0x6E8E* a1);
void sub_27720(type_event_0x6E8E* a1, signed __int16 a2);
void sub_27880(type_event_0x6E8E* a1);
int sub_278F0(int a1, __int16 a2, __int16 a3);
void sub_27930(type_event_0x6E8E* a1);
void sub_27950(type_event_0x6E8E* a1);
void sub_27B20(type_event_0x6E8E* a1);
void sub_27C10(type_event_0x6E8E* a1);
void sub_27E00(type_event_0x6E8E* a1);
void sub_27FA0(type_event_0x6E8E* a1);
void sub_27FC0(type_event_0x6E8E* a1);
void sub_27FE0(type_event_0x6E8E* a1, char a2, char a3, int a4);
type_event_0x6E8E* sub_28000(type_event_0x6E8E* a1);
char sub_28060(type_event_0x6E8E* a1);
void sub_28110(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_282D0(type_event_0x6E8E* a1);
char sub_28390(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
type_event_0x6E8E* sub_28420(type_event_0x6E8E* a1);
void sub_28470(type_event_0x6E8E* a1);
void sub_28490(type_event_0x6E8E* a1);
void sub_28500(type_event_0x6E8E* a1);
void sub_28570(type_event_0x6E8E* a1);
void sub_285D0(type_event_0x6E8E* a1);
void sub_285F0(type_event_0x6E8E* a1);
void sub_28610(type_event_0x6E8E* a1);
void sub_28630(type_event_0x6E8E* a1);
void sub_28660(type_event_0x6E8E* a1);
void sub_28690(type_event_0x6E8E* a1);
void sub_287B0(type_event_0x6E8E* a1);
__int16 sub_28860(type_event_0x6E8E* a1);
int sub_28C30(type_event_0x6E8E* a1);
signed int sub_28C60(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_28CC0(type_event_0x6E8E* a1);
void sub_28CE0(type_event_0x6E8E* a1x);
void sub_28EC0(type_event_0x6E8E* a1);
void sub_28F50(type_event_0x6E8E* a1);
void sub_28F90(type_event_0x6E8E* a1);
void sub_28FC0(type_event_0x6E8E* a1);
void sub_28FF0(type_event_0x6E8E* a1);
void sub_29300(type_event_0x6E8E* a1);
void sub_29330(type_event_0x6E8E* a1);
void sub_29350(type_event_0x6E8E* a1);
void sub_29380(type_event_0x6E8E* a1);
void sub_293B0(type_event_0x6E8E* a1);
void sub_293D0(type_event_0x6E8E* a1);
void sub_29400(type_event_0x6E8E* a1);
void sub_29670(type_event_0x6E8E* a1);
void sub_29710(type_event_0x6E8E* a1);
void sub_29890(type_event_0x6E8E* a1);
void sub_298B0(type_event_0x6E8E* a1);
int sub_298D0(type_event_0x6E8E* a1);
void sub_29930(type_event_0x6E8E* a1);
void sub_29A90(type_event_0x6E8E* a1);
void sub_27590(type_event_0x6E8E* a2x);
void sub_27610(type_event_0x6E8E* a2x);
void sub_2A5B0(type_event_0x6E8E* a1, type_event_0x6E8E* a2, __int16 a3);
void sub_2A660(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
signed int sub_2A6B0(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_2A6F0(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_2A7B0(type_event_0x6E8E* a1);
void sub_2A7F0(type_event_0x6E8E* a1x, type_event_0x6E8E* a2, char a3);
void sub_2A940(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
void sub_2A9F0(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
void sub_2AC50(type_event_0x6E8E* a1);
void sub_2AD40(type_event_0x6E8E* a1);
void sub_2AE30(type_event_0x6E8E* a1);
void sub_2AE80(type_event_0x6E8E* a1);
void sub_2AED0(type_event_0x6E8E* a1, int a2);
char sub_2AF10(type_event_0x6E8E* a1, char a2);
void sub_2B1D0(type_event_0x6E8E* a1);
void sub_2B200(type_event_0x6E8E* a1);
void sub_2B260(type_event_0x6E8E* a1);
void sub_2B750(type_event_0x6E8E* a1);
void sub_2B760(type_event_0x6E8E* a1);
void sub_2B780(type_event_0x6E8E* a1);
void sub_2B7B0(type_event_0x6E8E* a1);
char sub_2B7E0(type_event_0x6E8E* a1);
void sub_2B840(type_event_0x6E8E* a1);
void sub_2B860(type_event_0x6E8E* a1, unsigned __int8 a2);
signed int sub_2B9A0(type_event_0x6E8E* a1x);
void sub_2BA50(type_event_0x6E8E* a1, unsigned __int8 a2);
void sub_2BBB0(int16_t posX, int16_t posY, bitmap_pos_struct_t a3, uint8_t scale = 1);
void sub_30D50(type_event_0x6E8E* a1/*, uint8_t v2, uint8_t v4*/);
void AddQuickfair0A_01_30F60(type_event_0x6E8E* a1);
void CastSpeedSpell_31100(type_event_0x6E8E* a1);
void sub_31120(type_event_0x6E8E* a1);
void sub_311E0(type_event_0x6E8E* a1);
void sub_31760(type_event_0x6E8E* a1);
void sub_31870(type_event_0x6E8E* a1);
void sub_31890(type_event_0x6E8E* a1);
void AddAsh0A_05_318B0(type_event_0x6E8E* a1);
void sub_31920(type_event_0x6E8E* a1);
void sub_31940(type_event_0x6E8E* a1);
void sub_31E90(type_event_0x6E8E* a1);
void sub_31F00(type_event_0x6E8E* a1, __int16 a2, __int16 a3);
void sub_31FB0(type_event_0x6E8E* a1x);
void PossesHitMana_320E0(type_event_0x6E8E* a1x);
void sub_32120(type_event_0x6E8E* a1);
void sub_32160(type_event_0x6E8E* a1);
void sub_322A0(type_event_0x6E8E* a1);
void AddParticleSmoke0A_3B_323E0(type_event_0x6E8E* a1);
void AddParticleSmoke0A_3C_32400(type_event_0x6E8E* a1);
void AddParticleSmoke0A_3D_32420(type_event_0x6E8E* a1);
void sub_32530(type_event_0x6E8E* a1);
void sub_32600(type_event_0x6E8E* a1);
void sub_32880(type_event_0x6E8E* a1);
void sub_32A70(type_event_0x6E8E* a1);
void sub_32CF0(type_event_0x6E8E* a1);
void sub_32F40(type_event_0x6E8E* a1);
void sub_33110(type_event_0x6E8E* a1);
void sub_331A0(type_event_0x6E8E* a1);
void sub_33340(type_event_0x6E8E* a1);
void sub_33710(type_event_0x6E8E* a1);
char sub_33810(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
void sub_338D0(type_event_0x6E8E* a1);
void sub_339B0(type_event_0x6E8E* a1);
void sub_33AD0(type_event_0x6E8E* a1);
void sub_33B20(type_event_0x6E8E* a1);
void sub_33C00(type_event_0x6E8E* a1);
void sub_33C70(type_event_0x6E8E* a1);
void sub_33D40(type_event_0x6E8E* a1);
void sub_33D80(type_event_0x6E8E* a1);
void sub_33E20(type_event_0x6E8E* a1);
void sub_33E80(type_event_0x6E8E* a1);
void sub_34000(type_event_0x6E8E* a1);
void sub_34110(type_event_0x6E8E* a1);
void sub_34210(type_event_0x6E8E* a1);
void sub_34330(type_event_0x6E8E* a1);
void sub_34350(type_event_0x6E8E* a1);
void sub_34390(type_event_0x6E8E* a1);
void sub_343C0(type_event_0x6E8E* a1);
void ApplyPointToPath_343F0(type_event_0x6E8E* a1);
void sub_34480(type_event_0x6E8E* a1);
void sub_344A0(type_event_0x6E8E* a1);
void sub_34520(type_event_0x6E8E* a1);
void sub_34540(type_event_0x6E8E* a1);
void sub_34910(type_event_0x6E8E* a1);
void sub_34B00(char a1, char a2, __int16 a3, __int16 a4);
void sub_34C40(type_event_0x6E8E* a1);
void sub_352A0(type_event_0x6E8E* a1);
void sub_352C0(type_event_0x6E8E* a1);
void sub_35390(type_event_0x6E8E* a1);
void sub_35530(type_event_0x6E8E* a1);
void sub_35600(type_event_0x6E8E* a1);
void sub_35640(type_event_0x6E8E* a1);
void sub_357C0(type_event_0x6E8E* a1);
void sub_34EE0(type_event_0x6E8E* a3x);
void TransformArcherToMana_35940(type_event_0x6E8E* a1);
char sub_36680(type_event_0x6E8E* a1);
void sub_36770(type_event_0x6E8E* a1);
void sub_36850(type_event_0x6E8E* a1);
void sub_36AE0(type_event_0x6E8E* a1);
void sub_35FB0(type_event_0x6E8E* a1x);
void sub_36BA0(type_event_0x6E8E* a1, char a2);
void sub_36D50(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
void sub_36F30(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
void sub_36FC0(type_event_0x6E8E* a1x);
void ApplyTerrainModification_37240(type_event_0x6E8E* a1x);
bool IsNextEvent0A_2A_37740(type_event_0x6E8E* a1);
void sub_377A0(type_event_0x6E8E* a1);
void sub_377F0(type_event_0x6E8E* a1);
void AddTerrainMod0A_2A_37BC0(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_38270(type_event_0x6E8E* a1);
int AddHouse0A_2D_38330(type_event_0x6E8E* a1);
void sub_385C0_remove_castle_stage(type_event_0x6E8E* a1);
int sub_389F0(type_event_0x6E8E* a1);
signed int CompareEvent08_38B00(type_event_0x6E8E* a1);
int sub_38B90(type_event_0x6E8E* a1);
unsigned int sub_38D80(type_event_0x6E8E* a1);
int sub_38E20(type_event_0x6E8E* a1);
int sub_38E40(type_event_0x6E8E* a1);
int sub_38E70(type_event_0x6E8E* a1);
int sub_38F70(type_event_0x6E8E* a1);
void sub_39040(type_event_0x6E8E* a1);
void sub_396A0(type_event_0x6E8E* a1);
unsigned __int8 sub_396D0(type_event_0x6E8E* a1);
void sub_39B60(type_event_0x6E8E* a1);
char sub_39E40(type_event_0x6E8E* a1);
char sub_39FA0(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
void sub_3A090(type_event_0x6E8E* a1);
void sub_3A200(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
void sub_3A2D0(type_event_0x6E8E* a1);
void sub_3A5B0(type_event_0x6E8E* a1);
void sub_3A630(type_event_0x6E8E* a1);
int sub_3A650(type_event_0x6E8E* a1);
char sub_3A7F0(type_event_0x6E8E* a1);
void sub_3A8B0(type_event_0x6E8E* a1);
void sub_3AF00_castle_defend_event(type_event_0x6E8E* a1);
void sub_53160();
void sub_53590(Type_Level_2FECE* a1);
void sub_59C40_getTerrtoZ(type_event_0x6E8E* a1);
int sub_59C60(type_event_0x6E8E* a1);
int sub_59C80(type_event_0x6E8E* a1);
char sub_59DC0(type_event_0x6E8E* a1);
void sub_59F60(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_5B070(type_event_0x6E8E* a1);
void sub_5B100(type_event_0x6E8E* locEvent);
void AddPlayer03_00_5E010(type_event_0x6E8E* a1);
void sub_5E310_multiplayer_test_die(type_event_0x6E8E* a1);
int sub_5E660(type_event_0x6E8E* a1);
__int16 sub_5E6C0(type_event_0x6E8E* a1);
void sub_5E7C0_multiplayer_test_banished(type_event_0x6E8E* a1);
signed int sub_5E8C0_endGameSeq(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_5EF70(type_event_0x6E8E* a1);
signed int sub_5EFA0(type_event_0x6E8E* a1);
void sub_5F380(type_event_0x6E8E* a1);
char sub_5F660(type_event_0x6E8E* a1, type_event_0x6E8E* a2, int a3);
void sub_5F7B0(type_event_0x6E8E* a1, type_event_0x6E8E* a2, int a3);
void sub_5F7E0(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
type_event_0x6E8E* sub_5F810(type_event_0x6E8E* a1, type_event_0x6E8E* a2, type_event_0x6E8E* a3);
void sub_5F890(type_event_0x6E8E* a1, __int16 a2);
void EndOfCastleProjectile_5F8F0(type_event_0x6E8E* a1);
void BeginOfCastleCreation_5FA70(type_event_0x6E8E* locEvent);
void sub_5FBD0(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_5FC40(type_event_0x6E8E* a1);
void sub_5FCA0_destroy_castle_level(type_event_0x6E8E* a1);
void sub_5FD00(type_event_0x6E8E* a1);
void sub_5FF50(type_event_0x6E8E* a1);
void sub_60480(type_event_0x6E8E* a1);
void sub_605E0(type_event_0x6E8E* a1);
void sub_60780(type_event_0x6E8E* a1, type_event_0x6E8E* a2, int a3, int a4);
void sub_60810(type_event_0x6E8E* locEvent);
int sub_609E0(type_event_0x6E8E* locEvent);
void AddBallon_60AB0(type_event_0x6E8E* a1);
void sub_60D50(axis_3d* a1, type_event_0x6E8E* a2);
void sub_60EA0(type_event_0x6E8E* a1);
void sub_60F00();
type_event_0x6E8E* sub_61000(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_61050(type_event_0x6E8E* a1);
void sub_613D0(type_event_0x6E8E* a1);
char sub_61620(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
signed int sub_61810(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
uint32_t AddTree02_00_64E20(type_event_0x6E8E* a1);
uint32_t sub_64F60(type_event_0x6E8E* a1);
uint32_t sub_64FF0(type_event_0x6E8E* a1);
void AddStatue02_01_65040(type_event_0x6E8E* a1);
void AddDolmen02_02_65080(type_event_0x6E8E* a1);
int sub_65110(type_event_0x6E8E* a1);
uint32_t sub_651B0(type_event_0x6E8E* a1);
uint32_t sub_65240(type_event_0x6E8E* a1);
void sub_65280(type_event_0x6E8E* a1);
void sub_652A0(type_event_0x6E8E* a1);
void sub_652C0(type_event_0x6E8E* a1);
void sub_654B0( type_event_0x6E8E* a2);
void sub_65580(type_event_0x6E8E* a1);
void sub_655A0(type_event_0x6E8E* a1);
void sub_655C0(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
void sub_65610(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
__int16 sub_656D0(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
void sub_65780(type_event_0x6E8E* a1, type_event_0x6E8E* a2, type_event_0x6E8E* a3);
type_event_0x6E8E* sub_65820(type_event_0x6E8E* a1);
void CastPlayerFire_65B30(type_event_0x6E8E* a1);
void sub_65B50(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_65C20(type_event_0x6E8E* a1);
void CastPosses_65F60(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_66160(type_event_0x6E8E* a1);
void sub_66180(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_66250(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_66280(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_662A0(type_event_0x6E8E* a1);
void sub_662C0(type_event_0x6E8E* a1);
void sub_662E0(type_event_0x6E8E* a1);
void sub_66610(type_event_0x6E8E* a1);
void sub_66750(type_event_0x6E8E* a1);
void CastCastleProjectile_66B30(type_event_0x6E8E* a1);
void sub_66D00(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_66FB0(type_event_0x6E8E* a1);
void sub_66FD0(type_event_0x6E8E* a1);
void AddArcherArrow_672E0(type_event_0x6E8E* a1);
void sub_67410(type_event_0x6E8E* a1);
void sub_67430(type_event_0x6E8E* a1);
void sub_67450(type_event_0x6E8E* a1);
void sub_67470(type_event_0x6E8E* a1);
void sub_674C0(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_676F0(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_67740(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_67760(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_67780(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_677A0(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_677D0(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_67800(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_67890(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_678E0(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_67910(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_67940(type_event_0x6E8E* a1);
void sub_67960(type_event_0x6E8E* a2x);
signed int sub_67CB0(type_event_0x6E8E* a1);
int sub_68490(type_event_0x6E8E* a1, type_event_0x6E8E* a2, unsigned __int16 a3, unsigned __int16 a4);
int sub_685D0(type_event_0x6E8E* a1, type_event_0x6E8E* a2, unsigned __int16 a3, unsigned __int16 a4);
void sub_686D0(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
char sub_68740(type_event_0x6E8E* a1, type_event_0x6E8E* a2, unsigned __int16 a3, __int16 a4);
char sub_68940(type_event_0x6E8E* a1);
char sub_68AC0(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
char sub_68BD0(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
void sub_68BF0();
int sub_68C70(type_event_0x6E8E* a1);
bool sub_68D50(type_event_0x6E8E* locEvent1, type_event_0x6E8E* locEvent2);
signed int sub_68DE0(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
signed int sub_68E50(type_event_0x6E8E* a1, type_event_0x6E8E* a2, type_event_0x6E8E* a3);
signed int sub_68FF0(type_event_0x6E8E* a1, char a2, char a3);
signed int sub_692A0(type_event_0x6E8E* a1);
char sub_692C0(type_event_0x6E8E* a1);
void sub_69300(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
void sub_693F0(type_event_0x6E8E* a1);
signed int sub_69600(type_event_0x6E8E* a1);
signed int sub_69620(type_event_0x6E8E* a1);
void sub_69640(type_event_0x6E8E* a1);
void sub_69900(type_event_0x6E8E* a1, type_event_0x6E8E* a2);
signed int sub_69A70(type_event_0x6E8E* a1);
signed int sub_69A90(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_69AB0(type_event_0x6E8E* a1);
signed int sub_69D70(type_event_0x6E8E* a1);
signed int sub_69D90(type_event_0x6E8E* a1);
void GetScroll_69DB0(type_event_0x6E8E* a1);
signed int AllCreaturesKilled_69FF0(type_event_0x6E8E* a1);
signed int sub_6A010(type_event_0x6E8E* a1);
void sub_6A030(type_event_0x6E8E* a1);
signed int sub_6A2C0(type_event_0x6E8E* a1);
signed int sub_6A2E0(type_event_0x6E8E* a1);
void sub_6A300(type_event_0x6E8E* a1);
signed int sub_6A440(type_event_0x6E8E* a1);
signed int sub_6A460(type_event_0x6E8E* a1);
void sub_6A480(type_event_0x6E8E* a1);
signed int sub_6A580(type_event_0x6E8E* a1);
signed int sub_6A5A0(type_event_0x6E8E* a1);
void sub_6A5C0(type_event_0x6E8E* a1);
signed int sub_6A9C0(type_event_0x6E8E* a1);
signed int sub_6A9E0(type_event_0x6E8E* a1);
__int16 sub_6AA00(type_event_0x6E8E* a1);
signed int sub_6AAC0(type_event_0x6E8E* a1);
signed int sub_6AAE0(type_event_0x6E8E* a1);
void sub_6AB00(type_event_0x6E8E* a1);
signed int sub_6AD00(type_event_0x6E8E* a1);
signed int sub_6AD20(type_event_0x6E8E* a1);
void sub_6AD60(type_event_0x6E8E* a1);
signed int sub_6B180(type_event_0x6E8E* a1);
signed int sub_6B1A0(type_event_0x6E8E* a1);
void sub_6B1C0(type_event_0x6E8E* a1);
signed int sub_6B2D0(type_event_0x6E8E* a1);
signed int sub_6B2F0(type_event_0x6E8E* a1);
__int16 sub_6B310(type_event_0x6E8E* a1);
signed int sub_6B3A0(type_event_0x6E8E* a1);
signed int sub_6B3C0(type_event_0x6E8E* a1);
void sub_6B3E0(type_event_0x6E8E* a1);
signed int sub_6B5D0(type_event_0x6E8E* a1);
signed int sub_6B5F0(type_event_0x6E8E* a1);
__int16 sub_6B610(type_event_0x6E8E* a1);
signed int sub_6B830(type_event_0x6E8E* a1);
signed int sub_6B850(type_event_0x6E8E* a1);
void sub_6B870(type_event_0x6E8E* a1);
signed int sub_6BA70(type_event_0x6E8E* a1);
signed int sub_6BA90(type_event_0x6E8E* a1);
void sub_6BAB0(type_event_0x6E8E* a1);
signed int sub_6BCB0(type_event_0x6E8E* a1);
signed int sub_6BCD0(type_event_0x6E8E* a1);
void sub_6BCF0(type_event_0x6E8E* a1);
signed int sub_6BEF0(type_event_0x6E8E* a1);
signed int sub_6BF10(type_event_0x6E8E* a1);
void sub_6BF30(type_event_0x6E8E* a1);
signed int sub_6C130(type_event_0x6E8E* a1);
signed int sub_6C150(type_event_0x6E8E* a1);
void sub_6C170(type_event_0x6E8E* a1);
signed int sub_6C3A0(type_event_0x6E8E* a1);
signed int sub_6C3C0(type_event_0x6E8E* a1);
void sub_6C3E0(type_event_0x6E8E* a1);
signed int sub_6C5E0(type_event_0x6E8E* a1);
signed int sub_6C600(type_event_0x6E8E* a1);
void sub_6C620(type_event_0x6E8E* a1);
signed int sub_6C830(type_event_0x6E8E* a1);
signed int sub_6C850(type_event_0x6E8E* a1);
void sub_6C870(type_event_0x6E8E* a1);
signed int sub_6CA80(type_event_0x6E8E* a1);
signed int sub_6CAA0(type_event_0x6E8E* a1);
void sub_6CAC0(type_event_0x6E8E* a1);
signed int sub_6CCE0(type_event_0x6E8E* a1);
signed int sub_6CD00(type_event_0x6E8E* a1);
void sub_6CD20(type_event_0x6E8E* a1);
signed int sub_6CF60(type_event_0x6E8E* a1);
signed int sub_6CF80(type_event_0x6E8E* a1);
void sub_6CFA0(type_event_0x6E8E* a1);
signed int sub_6D1C0(type_event_0x6E8E* a1);
signed int sub_6D1E0(type_event_0x6E8E* a1);
void sub_6D830(type_event_0x6E8E* a1, char a2);
void sub_6D880(type_event_0x6E8E* a1);
void sub_6D9C0(type_str_611* a1, type_SPELLS_BEGIN_BUFFER_str* a2, __int16 a3, char a4, char a5);
void sub_6DAD0(type_str_611* a1, type_SPELLS_BEGIN_BUFFER_str* a2, __int16 a3);
void sub_6DB50(char a1, char a2);
void sub_6DBD0();
void sub_6DC40_improve_ability(unsigned __int8 a1);
type_event_0x6E8E* sub_6DCA0(type_event_0x6E8E* a1, axis_3d* a2, unsigned __int16 a3, type_SPELLS_BEGIN_BUFFER_str_sub* a4, __int16 a5, char a6);
void sub_6E090(type_str_611* a1, int a2);
void sub_6E0D0();
void sub_6E150();
void sub_6EAB0(int a1, __int16 a2, __int16 a3);
void SetMousePosition_6EDE0(int16_t posX, int16_t posY);
type_event_0x6E8E* AddSwitch0B_00_6F030(type_event_0x6E8E* a1);
type_event_0x6E8E* CheckpointArrived_6F070(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_6F100(type_event_0x6E8E* a1);
type_event_0x6E8E* AddSwitch0B_04_6F150(type_event_0x6E8E* a1);
void AddSwitch0B_20_6F1C0(type_event_0x6E8E* a1);
void sub_6F2B0(type_event_0x6E8E* a1);
unsigned int sub_6F300(type_event_0x6E8E* a1, signed int a2);
unsigned int sub_6F420(type_event_0x6E8E* a1);
unsigned int sub_6F440(type_event_0x6E8E* a1);
unsigned int sub_6F460(type_event_0x6E8E* a1);
unsigned int sub_6F480(type_event_0x6E8E* a1);
unsigned int AddSwitch0B_11_6F4A0(type_event_0x6E8E* a1);
unsigned int sub_6F4C0(type_event_0x6E8E* a1);
unsigned int sub_6F4E0(type_event_0x6E8E* a1);
unsigned int sub_6F500(type_event_0x6E8E* a1);
unsigned int sub_6F520(type_event_0x6E8E* a1);
unsigned int sub_6F540(type_event_0x6E8E* a1);
unsigned int sub_6F560(type_event_0x6E8E* a1);
unsigned int sub_6F580(type_event_0x6E8E* a1);
unsigned int sub_6F5A0(type_event_0x6E8E* a1);
unsigned int sub_6F5C0(type_event_0x6E8E* a1);
unsigned int sub_6F5E0(type_event_0x6E8E* a1);
unsigned int sub_6F600(type_event_0x6E8E* a1);
unsigned int sub_6F620(type_event_0x6E8E* a1);
unsigned int sub_6F640(type_event_0x6E8E* a1);
unsigned int sub_6F660(type_event_0x6E8E* a1);
unsigned int sub_6F680(type_event_0x6E8E* a1);
unsigned int sub_6F6A0(type_event_0x6E8E* a1);
unsigned int sub_6F6C0(type_event_0x6E8E* a1);
unsigned int sub_6F6E0(type_event_0x6E8E* a1);
unsigned int sub_6F700(type_event_0x6E8E* a1);
unsigned int sub_6F720(type_event_0x6E8E* a1);
unsigned int sub_6F740(type_event_0x6E8E* a1);
unsigned int sub_6F760(type_event_0x6E8E* a1);
unsigned int sub_6F780(type_event_0x6E8E* a1);
unsigned int sub_6F7A0(type_event_0x6E8E* a1);
unsigned int sub_6F7C0(type_event_0x6E8E* a1);
x_BYTE* sub_6F7E0(type_event_0x6E8E* a1);
void sub_6F0B0(type_event_0x6E8E* a1);
type_event_0x6E8E* InitSwitchChainZaxisAndSound_6F850(type_event_0x6E8E* a1, int a2);
type_event_0x6E8E* sub_6F8E0(type_event_0x6E8E* a1, int a2);
type_event_0x6E8E* sub_4A820(axis_3d* a1);
type_event_0x6E8E* sub_4A840(axis_3d* a1);
type_event_0x6E8E* sub_4A860(axis_3d* a1);
type_event_0x6E8E* sub_4A880(axis_3d* a1);
type_event_0x6E8E* sub_4A8A0(axis_3d* a1);
type_event_0x6E8E* sub_4A8C0(axis_3d* a1);
type_event_0x6E8E* sub_4A8E0(axis_3d* a1);
type_event_0x6E8E* sub_4A900(axis_3d* a1);
type_event_0x6E8E* AddPlayer_4A920(axis_3d* a1);
type_event_0x6E8E* sub_4A9C0(axis_3d* a1);
type_event_0x6E8E* sub_4AA40(axis_3d* a1);
type_event_0x6E8E* sub_4ABA0(axis_3d* a1);
type_event_0x6E8E* AddTree_4AC40(axis_3d* a1);
type_event_0x6E8E* sub_4AD70(axis_3d* a1);
type_event_0x6E8E* AddDolmen_4ADF0(axis_3d* a1);
type_event_0x6E8E* sub_4AE80(axis_3d* a1);
type_event_0x6E8E* sub_4AF00(axis_3d* a1);
type_event_0x6E8E* sub_4AF70(axis_3d* a1);
type_event_0x6E8E* sub_4AFE0(axis_3d* a1);
type_event_0x6E8E* sub_4B0F0(axis_3d* a1);
type_event_0x6E8E* sub_4B120(axis_3d* a1);
type_event_0x6E8E* sub_4B150(axis_3d* a1, char a2, char a3, __int16 a4);
type_event_0x6E8E* sub_4B240(axis_3d* a1);
type_event_0x6E8E* AddCreature_4B490(axis_3d* a1);
type_event_0x6E8E* sub_4B590(axis_3d* a1);
type_event_0x6E8E* sub_4B6F0(axis_3d* a1);
type_event_0x6E8E* AddArchers_4BA10(axis_3d* a1);
type_event_0x6E8E* sub_4BBB0(axis_3d* a1);
type_event_0x6E8E* sub_4BD00(axis_3d* a1);
type_event_0x6E8E* sub_4BDF0(axis_3d* a1);
type_event_0x6E8E* AddVilliger_4BF40(axis_3d* a1);
type_event_0x6E8E* sub_4C0B0(axis_3d* a1);
type_event_0x6E8E* sub_4C1E0(axis_3d* a1);
type_event_0x6E8E* sub_4C310(axis_3d* a1);
type_event_0x6E8E* sub_4C460(axis_3d* a1);
type_event_0x6E8E* sub_4C590(axis_3d* a1);
type_event_0x6E8E* sub_4C6B0(axis_3d* a1);
type_event_0x6E8E* sub_4C7F0(axis_3d* a1);
type_event_0x6E8E* sub_4C8F0(axis_3d* a1);
type_event_0x6E8E* sub_4CA00(axis_3d* a1);
void sub_4CB60(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_4CBF0(axis_3d* a1);
type_event_0x6E8E* sub_4CCF0(axis_3d* a1);
type_event_0x6E8E* sub_4CE00(axis_3d* a1);
type_event_0x6E8E* sub_4CF00(axis_3d* a1);
type_event_0x6E8E* sub_4D000(axis_3d* a2);
type_event_0x6E8E* sub_4D1D0(axis_3d* a1);
type_event_0x6E8E* SummonFireball_4D2E0(axis_3d* a1);
type_event_0x6E8E* sub_4D380(axis_3d* a1);
type_event_0x6E8E* SummonManaPosession_4D3B0(axis_3d* a1);
type_event_0x6E8E* sub_4D470(axis_3d* a1);
type_event_0x6E8E* sub_4D500(axis_3d* a1);
type_event_0x6E8E* sub_4D590(axis_3d* a1);
type_event_0x6E8E* sub_4D620(axis_3d* a1);
type_event_0x6E8E* sub_4D6B0(axis_3d* a1);
type_event_0x6E8E* sub_4D740(axis_3d* a1);
type_event_0x6E8E* sub_4D7D0(axis_3d* a1);
type_event_0x6E8E* sub_4D860(axis_3d* a1);
type_event_0x6E8E* sub_4D900(axis_3d* a1);
type_event_0x6E8E* sub_4D990(axis_3d* a1);
type_event_0x6E8E* sub_4DA20(axis_3d* a1);
type_event_0x6E8E* AddEvent09_0D_4DAB0(axis_3d* a1);
type_event_0x6E8E* sub_4DBC0(axis_3d* a1);
type_event_0x6E8E* sub_4DC40(axis_3d* a1);
type_event_0x6E8E* sub_4DCC0(axis_3d* a1);
type_event_0x6E8E* sub_4DD50(axis_3d* a1);
type_event_0x6E8E* sub_4DDD0(axis_3d* a1);
type_event_0x6E8E* sub_4DEA0(axis_3d* a1);
type_event_0x6E8E* sub_4DF30(axis_3d* a1);
type_event_0x6E8E* sub_4DFC0(axis_3d* a1);
type_event_0x6E8E* sub_4E050(axis_3d* a1);
type_event_0x6E8E* sub_4E0F0(axis_3d* a1);
type_event_0x6E8E* sub_4E180(axis_3d* a1);
type_event_0x6E8E* sub_4E210(axis_3d* a1);
type_event_0x6E8E* sub_4E2A0(axis_3d* a1);
type_event_0x6E8E* NewAdd0A00_4E320(axis_3d* a1);
type_event_0x6E8E* NewAdd0A01_4E3B0(axis_3d* a1);
type_event_0x6E8E* NewAdd0A02_4E430(axis_3d* a1);
type_event_0x6E8E* NewAdd0A03_4E490(axis_3d* a1);
type_event_0x6E8E* NewAdd0A04_4E500(axis_3d* a1);
type_event_0x6E8E* NewAdd0A05_4E570(axis_3d* a1);
type_event_0x6E8E* NewAdd0A06_4E5F0(axis_3d* a1);
type_event_0x6E8E* NewAdd0A07_4E6A0(axis_3d* a1);
type_event_0x6E8E* sub_4E750();
type_event_0x6E8E* NewAdd0A09_4E760(axis_3d* a1);
type_event_0x6E8E* NewAdd0A0A_4E7D0(axis_3d* a1);
type_event_0x6E8E* NewAdd0A0B_4E840(axis_3d* a1);
type_event_0x6E8E* NewAdd0A0C_4E8C0(axis_3d* a1);
type_event_0x6E8E* NewAdd0A46_4E950(axis_3d* a1);
type_event_0x6E8E* SetParticleSmoke3B_4E9E0(axis_3d* a1);
type_event_0x6E8E* SetParticleSmoke3C_4EA20(axis_3d* a1);
type_event_0x6E8E* sub_4EA60(axis_3d* a1);
type_event_0x6E8E* SetSmoke4_4EAA0(axis_3d* a1, char a2, char a3, __int16 a4, int a5);
type_event_0x6E8E* ArriveCheckpoint_4EB50(axis_3d* a1);
type_event_0x6E8E* AddSmoke_4EC10(axis_3d* a1);
type_event_0x6E8E* sub_4ECD0(axis_3d* a1);
type_event_0x6E8E* sub_4ED70(axis_3d* a1);
type_event_0x6E8E* sub_4EDC0(axis_3d* a1);
type_event_0x6E8E* sub_4EED0(axis_3d* a1);
type_event_0x6E8E* sub_4EF30(axis_3d* a1);
type_event_0x6E8E* sub_4EF90(axis_3d* a1);
type_event_0x6E8E* sub_4F040(axis_3d* a1);
unsigned __int16 sub_4F1C0(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_4F2A0(axis_3d* a1);
__int16 sub_4F440(type_event_0x6E8E* a1);
type_event_0x6E8E* sub_4F5F0(axis_3d* a1);
type_event_0x6E8E* sub_4F6A0(axis_3d* a1);
type_event_0x6E8E* sub_4F720(axis_3d* a1);
type_event_0x6E8E* sub_4F7A0(axis_3d* a1);
type_event_0x6E8E* sub_4F800(axis_3d* a1);
type_event_0x6E8E* sub_4F860(axis_3d* a1);
type_event_0x6E8E* sub_4F8B0(axis_3d* a1);
type_event_0x6E8E* sub_4F900(axis_3d* a1);
type_event_0x6E8E* sub_4F950(axis_3d* a1);
type_event_0x6E8E* AddPointToPath_4F9A0(axis_3d* a1);
type_event_0x6E8E* sub_4FA00(axis_3d* a1);
type_event_0x6E8E* sub_4FA60(axis_3d* a1);
type_event_0x6E8E* sub_4FAC0(axis_3d* a1);
type_event_0x6E8E* sub_4FB20(axis_3d* a1);
type_event_0x6E8E* sub_4FB80(axis_3d* a1);
type_event_0x6E8E* sub_4FBE0(axis_3d* a1);
type_event_0x6E8E* sub_4FC30(axis_3d* a1);
type_event_0x6E8E* sub_4FCA0(axis_3d* a1);
type_event_0x6E8E* sub_4FCD0(axis_3d* a1);
type_event_0x6E8E* sub_4FD00(axis_3d* a1);
type_event_0x6E8E* sub_4FD70(axis_3d* a1);
type_event_0x6E8E* sub_4FDE0(axis_3d* a1);
type_event_0x6E8E* sub_4FE40(axis_3d* a1);
type_event_0x6E8E* sub_4FF20();
type_event_0x6E8E* sub_4FF30(axis_3d* a1);
type_event_0x6E8E* sub_4FFB0(axis_3d* a1);
type_event_0x6E8E* sub_50020(axis_3d* a1);
type_event_0x6E8E* sub_50080(axis_3d* a1);
type_event_0x6E8E* sub_500A0(axis_3d* a1);
type_event_0x6E8E* sub_500C0(axis_3d* a1, __int16 a2);
type_event_0x6E8E* sub_50130(axis_3d* a1);
type_event_0x6E8E* sub_501D0(axis_3d* a1);
type_event_0x6E8E* AddTerrainModification_50250(axis_3d* a1);
type_event_0x6E8E* sub_502B0(axis_3d* a1);
type_event_0x6E8E* sub_50320(axis_3d* a1);
type_event_0x6E8E* sub_50370(axis_3d* a1);
type_event_0x6E8E* sub_503D0(axis_3d* a1);
type_event_0x6E8E* sub_50430(axis_3d* a1);
type_event_0x6E8E* sub_504B0(axis_3d* a1);
type_event_0x6E8E* sub_50500(axis_3d* a1);
type_event_0x6E8E* sub_505A0(axis_3d* a1);
type_event_0x6E8E* sub_505E0(axis_3d* a1);
type_event_0x6E8E* sub_50640(axis_3d* a1);
type_event_0x6E8E* sub_506E0(axis_3d* a1);
type_event_0x6E8E* sub_50780(axis_3d* a1);
type_event_0x6E8E* sub_507C0(axis_3d* a1);
type_event_0x6E8E* sub_50800();
type_event_0x6E8E* sub_50840(axis_3d* a1);
type_event_0x6E8E* sub_508E0_castle_defend_create(axis_3d* a1);
type_event_0x6E8E* sub_50960(axis_3d* a1);
type_event_0x6E8E* sub_50A20(axis_3d* a1);
type_event_0x6E8E* AddSwitchXX_50A90(axis_3d* a1, char a2, char a3);
type_event_0x6E8E* AddSwitch00_50AE0(axis_3d* a1);
type_event_0x6E8E* AddSwitch01_50B00(axis_3d* a1);
type_event_0x6E8E* AddSwitch02_50B20(axis_3d* a1);
type_event_0x6E8E* AddSwitch03_50B40(axis_3d* a1);
type_event_0x6E8E* AddSwitch04_50B60(axis_3d* a1);
type_event_0x6E8E* AddSwitch32_50B80(axis_3d* a1);
type_event_0x6E8E* AddSwitch12_50C10(axis_3d* a1);
type_event_0x6E8E* AddSwitch13_50C30(axis_3d* a1);
type_event_0x6E8E* AddSwitch14_50C50(axis_3d* a1);
type_event_0x6E8E* AddSwitch15_50C70(axis_3d* a1);
type_event_0x6E8E* AddSwitch16_50C90(axis_3d* a1);
type_event_0x6E8E* AddSwitch17_50CB0(axis_3d* a1);
type_event_0x6E8E* AddSwitch18_50CD0(axis_3d* a1);
type_event_0x6E8E* AddSwitch19_50CF0(axis_3d* a1);
type_event_0x6E8E* AddSwitch20_50D10(axis_3d* a1);
type_event_0x6E8E* AddSwitch21_50D30(axis_3d* a1);
type_event_0x6E8E* AddSwitch22_50D50(axis_3d* a1);
type_event_0x6E8E* AddSwitch23_50D70(axis_3d* a1);
type_event_0x6E8E* AddSwitch24_50D90(axis_3d* a1);
type_event_0x6E8E* AddSwitch25_50DB0(axis_3d* a1);
type_event_0x6E8E* AddSwitch26_50DD0(axis_3d* a1);
type_event_0x6E8E* AddSwitch27_50DF0(axis_3d* a1);
type_event_0x6E8E* AddSwitch28_50E10(axis_3d* a1);
type_event_0x6E8E* AddSwitch29_50E30(axis_3d* a1);
type_event_0x6E8E* AddSwitch33_50E50(axis_3d* a1);
type_event_0x6E8E* AddSwitch34_50E70(axis_3d* a1);
type_event_0x6E8E* AddSwitch35_50E90(axis_3d* a1);
type_event_0x6E8E* AddSwitch36_50EB0(axis_3d* a1);
type_event_0x6E8E* AddSwitch37_50ED0(axis_3d* a1);
type_event_0x6E8E* AddSwitch38_50EF0(axis_3d* a1);
type_event_0x6E8E* AddSwitch39_50F10(axis_3d* a1);
type_event_0x6E8E* AddSwitch40_50F30(axis_3d* a1);
type_event_0x6E8E* AddSwitch41_50F50(axis_3d* a1);
type_event_0x6E8E* AddSwitch42_50F70(axis_3d* a1);
type_event_0x6E8E* AddSwitch43_50F90(axis_3d* a1);
type_event_0x6E8E* addCheckpoint44_50FB0(axis_3d* a1);
type_event_0x6E8E* AddSwitch30_50FD0(axis_3d* a1);
type_event_0x6E8E* AddSwitch31atyp_50FF0(axis_3d* a1);
type_event_0x6E8E* sub_514E0(axis_3d* a1, char a2, char a3, __int16 a4);
type_event_0x6E8E* sub_51530(axis_3d* a1);
type_event_0x6E8E* sub_51570(axis_3d* a1);
type_event_0x6E8E* sub_515C0(axis_3d* a1);
type_event_0x6E8E* sub_51610(axis_3d* a1);
type_event_0x6E8E* sub_51660(axis_3d* a1);
type_event_0x6E8E* sub_516C0(axis_3d* a1);
type_event_0x6E8E* sub_51730(axis_3d* a1);
type_event_0x6E8E* sub_51790(axis_3d* a1);
type_event_0x6E8E* sub_51800(axis_3d* a1);
type_event_0x6E8E* sub_51A00(axis_3d* a1);
type_event_0x6E8E* AddSpellXX_XX_51120(axis_3d* a1, char a2, char a3);
type_event_0x6E8E* AddSpell00_00_511A0(axis_3d* a1);
type_event_0x6E8E* AddSpell01_03_511C0(axis_3d* a1);
type_event_0x6E8E* AddSpell02_06_511E0(axis_3d* a1);
type_event_0x6E8E* AddSpell03_09_51200(axis_3d* a1);
type_event_0x6E8E* AddSpell04_12_51220(axis_3d* a1);
type_event_0x6E8E* AddSpell05_15_51240(axis_3d* a1);
type_event_0x6E8E* AddSpell06_18_51260(axis_3d* a1);
type_event_0x6E8E* AddSpell07_21_51280(axis_3d* a1);
type_event_0x6E8E* AddSpell08_24_512A0(axis_3d* a1);
type_event_0x6E8E* AddSpell09_27_512C0(axis_3d* a1);
type_event_0x6E8E* AddSpell10_30_512E0(axis_3d* a1);
type_event_0x6E8E* AddSpell11_33_51300(axis_3d* a1);
type_event_0x6E8E* AddSpell12_36_51320(axis_3d* a1);
type_event_0x6E8E* AddSpell13_39_51340(axis_3d* a1);
type_event_0x6E8E* AddSpell14_42_51360(axis_3d* a1);
type_event_0x6E8E* AddSpell15_45_51380(axis_3d* a1);
type_event_0x6E8E* sub_513A0(axis_3d* a1);
type_event_0x6E8E* AddSpell17_51_513C0(axis_3d* a1);
type_event_0x6E8E* AddSpell18_54_513E0(axis_3d* a1);
type_event_0x6E8E* AddSpell19_57_51400(axis_3d* a1);
type_event_0x6E8E* AddSpell20_60_51420(axis_3d* a1);
type_event_0x6E8E* AddSpell21_63_51440(axis_3d* a1);
type_event_0x6E8E* AddSpell22_66_51460(axis_3d* a1);
type_event_0x6E8E* AddSpell23_69_51480(axis_3d* a1);
type_event_0x6E8E* AddSpell24_72_514A0(axis_3d* a1);
type_event_0x6E8E* AddSpell25_75_514C0(axis_3d* a1);
x_WORD* sub_60400(__int16 a1, x_WORD* a2, x_WORD* a3);
void sub_6D8B0(unsigned __int16 a1, unsigned __int16 a2, __int16 a3);

#endif //SUB_MAIN_ACTIVE
